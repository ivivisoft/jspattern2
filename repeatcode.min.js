var inherit=function(){var c=function(){};return function(a,b){c.prototype=b.prototype;a.prototype=new c;a.uber=b.prototype;a.prototype.constructor=a}}(),klass=function(c,a){var b;var d=function(){d.uber&&d.uber.hasOwnProperty("__construct")&&d.uber.__construct.apply(this,arguments);d.prototype.hasOwnProperty("__construct")&&d.prototype.__construct.apply(this,arguments)};c=c||Object;var e=function(){};e.prototype=c.prototype;d.prototype=new e;d.uber=c.prototype;d.prototype.constructor=d;for(b in a)a.hasOwnProperty(b)&&
(d.prototype[b]=a[b]);return d};function object(c){function a(){}a.prototype=c;return new a}function extend(c,a){var b;a=a||{};for(b in c)c.hasOwnProperty(b)&&(a[b]=c[b]);return a}function extendDeep(c,a){var b,d=Object.prototype.toString;a=a||{};for(b in c)c.hasOwnProperty(b)&&("object"===typeof c[b]?(a[b]="[object Array]"===d.call(c[b])?[]:{},extendDeep(c[b],a[b])):a[b]=c[b]);return a}
function mix(){var c,a,b={};var d=0;for(c=arguments.length;d<c;d+=1)for(a in arguments[d])arguments[d].hasOwnProperty(a)&&(b[a]=arguments[d][a]);return b}"undefined"===typeof Function.prototype.myBind&&(Function.prototype.myBind=function(c){var a=this,b=Array.prototype.slice,d=b.call(arguments,1);return function(){return a.apply(c,d.concat(b.call(arguments)))}});
